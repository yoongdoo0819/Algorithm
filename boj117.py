# 수들의 합 (BOJ 1789)

"""

S = 7이라면, 1+2+4로 총 3개의 숫자로 구성할 수 있기에 답은 3 (1+6으로 구성하면 2개의 숫자로 구성하므로 답이 아님).
S = 20이라면, 1+2+3+4+10으로 총 5개의 숫자로 구성할 수 있기에 답은 5.

아래의 코드에서는 N의 값이 0+1 = 1, 1+2 = 3, 3+3 = 6, 6+4 = 10, 10+5 = 15, 15+6 = 21의 순서로 누적되며
15+6 = 21이 20을 초과했기에 6-1=5개의 숫자로 답을 구성할 수 있음을 보장함.

만약 S = 200이라면, N의 값은 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78, 91, 105, 120, 136, 153, 171 순서로 증가하며, 마지막은 171+29 = 200이 되므로 답은 19.
이미 1부터 18까지의 값을 사용하여 N = 171이 되었고, 19와 20을 차례대로 더하면 171+19 = 190, 190+20 = 210이 됨.
서로 다른 숫자를 더하여 정확히 200을 만들어내야 하므로, 190에 10을 더할 수 없음 (이미 숫자 10은 이전에 사용했었기 때문).
따라서, 171에서 임의의 숫자 x를 더하여 정확히 200을 만들어내야 하며, 이미 1부터 18까지의 숫자는 사용하였으므로 19이상의 값을 더해서 200을 만들어내야 함.

즉, 190 + x > 200이 되는 경우, x는 이전에 이미 사용했던 숫자들과 달라야 하므로 최소 20 이상의 값이어야 하므로, 절대 190 + x = 200을 만족할 수 없음 
따라서 190 이전의 누적합인 171에서, 19 이상의 어떠한 값과 더하여 171 + x = 200을 만족해야 함 (이때, 19개의 숫자를 사용하였으므로 답은 19).


"""
S = int(input()) 
N = 0 
result = 0 

while True:
    result += 1
    N += result
    # print(N)
    
    if N > S:
        result -= 1
        break
    
print(result)
